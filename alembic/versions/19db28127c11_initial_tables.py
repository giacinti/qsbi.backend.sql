"""Initial tables

Revision ID: 19db28127c11
Revises: 
Create Date: 2022-09-27 08:46:12.784742

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '19db28127c11'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounttype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('bic', sa.Text(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('tel', sa.Text(), nullable=True),
    sa.Column('mail', sa.Text(), nullable=True),
    sa.Column('web', sa.Text(), nullable=True),
    sa.Column('contact_name', sa.Text(), nullable=True),
    sa.Column('contact_fax', sa.Text(), nullable=True),
    sa.Column('contact_tel', sa.Text(), nullable=True),
    sa.Column('contact_mail', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categorytype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('nickname', sa.Text(), nullable=True),
    sa.Column('code', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('party',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paymenttype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.Text(), nullable=True),
    sa.Column('firstname', sa.Text(), nullable=True),
    sa.Column('lastname', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('bank_id', sa.Integer(), nullable=True),
    sa.Column('bank_branch', sa.Text(), nullable=True),
    sa.Column('bank_account', sa.Text(), nullable=True),
    sa.Column('bank_account_key', sa.Text(), nullable=True),
    sa.Column('bank_IBAN', sa.Text(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('open_date', sa.DateTime(), nullable=True),
    sa.Column('close_date', sa.DateTime(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('initial_balance', sa.Float(), nullable=True),
    sa.Column('mini_balance_wanted', sa.Float(), nullable=True),
    sa.Column('mini_balance_auth', sa.Float(), nullable=True),
    sa.Column('holder_name', sa.Text(), nullable=True),
    sa.Column('holder_address', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['accounttype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auditlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['categorytype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currencylink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cur1_id', sa.Integer(), nullable=True),
    sa.Column('cur2_id', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cur1_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['cur2_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['log_id'], ['auditlog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('current', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['paymenttype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reconcile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('start_balance', sa.Float(), nullable=True),
    sa.Column('end_balance', sa.Float(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['log_id'], ['auditlog.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subcategory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id', 'category_id')
    )
    op.create_table('scheduled',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('limit_date', sa.DateTime(), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('automatic', sa.Integer(), nullable=True),
    sa.Column('party_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('sub_category_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('splitted', sa.Integer(), nullable=True),
    sa.Column('master_id', sa.Integer(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['log_id'], ['auditlog.id'], ),
    sa.ForeignKeyConstraint(['master_id'], ['scheduled.id'], ),
    sa.ForeignKeyConstraint(['party_id'], ['party.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['sub_category_id'], ['subcategory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('value_date', sa.DateTime(), nullable=True),
    sa.Column('party_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('sub_category_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('exchange_rate', sa.Float(), nullable=True),
    sa.Column('exchange_fees', sa.Float(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('master_id', sa.Integer(), nullable=True),
    sa.Column('reconcile_id', sa.Integer(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['log_id'], ['auditlog.id'], ),
    sa.ForeignKeyConstraint(['master_id'], ['transact.id'], ),
    sa.ForeignKeyConstraint(['party_id'], ['party.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['reconcile_id'], ['reconcile.id'], ),
    sa.ForeignKeyConstraint(['sub_category_id'], ['subcategory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transact')
    op.drop_table('scheduled')
    op.drop_table('subcategory')
    op.drop_table('reconcile')
    op.drop_table('payment')
    op.drop_table('currencylink')
    op.drop_table('category')
    op.drop_table('auditlog')
    op.drop_table('account')
    op.drop_table('user')
    op.drop_table('paymenttype')
    op.drop_table('party')
    op.drop_table('currency')
    op.drop_table('categorytype')
    op.drop_table('bank')
    op.drop_table('accounttype')
    # ### end Alembic commands ###
